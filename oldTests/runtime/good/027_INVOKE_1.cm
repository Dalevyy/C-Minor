/*
    Invocation Test #1

    This tests for a chain method invocation.

    Output:
        start()
        next() = 3 
        after after() = after() = 3.14
        last()
        6.78
        end of call sequence 
*/

class A {

    protected method last() => Void {
        cout << 'last()\n'
    }

    protected method after(in a:Real) => Real {
        cout << 'after() = ' << a << endl 
        last()
        return 6.78
    }

    protected method next(in a:Int) => Void {
        cout << 'next() = ' << a << endl 
        cout << 'after after() = ' << after(3.14) << endl 
    }

    public method start() => Void {
        cout << 'start()\n'
        next(3)
        cout << 'end of call sequence\n'
    }
}

def a:A = new A()
a.start()
