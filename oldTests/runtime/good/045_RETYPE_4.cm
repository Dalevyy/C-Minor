/*
    Retype Statement Test #4

    This tests if a retype statement will 
    correctly track types using compound 
    control statements.

    Output:
        Hi 
*/

class A {
    public method print() => Void { cout << 'in A' }
}

class B inherits A { 
    public method hi() => Void { cout << 'Hi' }
}

class C inherits A {
    public method hey() => Void { cout << 'Hey' }
}

class D inherits A {
    public method yo() => Void { cout << 'Yo' }
}

def a:A = uninit 
def i:Int = 0

while(True) {
    if(i < 5) {
        retype a = new B()
    } else {
        def b:Int = 5
        retype a = new C()
        while(b != 10) {
            retype a = new D()
            set b += 1
        }
    }

    if(a instanceof B) {
        break 
    }

    set i += 1
}

a.hi()
