
class Fraction {
    public num:Int 
    public den:Int

    public method print() => Void { cout << num << '/' << den }

    public operator*(out f:Fraction) => Fraction { return new Fraction(num=num*f.num,den=den*f.den) }
    public operator/(out f:Fraction) => Fraction { return new Fraction(num=num*f.den,den=den*f.num) }

    protected recurs method gcd(in a:Int, in b:Int) => Int {
        if(a == 0) { return b }
        return gcd(b % a, a)
    }
    protected method lcd(out f:Fraction) => Int { return (den * f.den) / gcd(den,f.den) }
}

def main() => Void {
    def f1:Fraction = new Fraction(num=3,den=4)
    def f2:Fraction = new Fraction(num=2,den=7)

    def f3:Fraction = f1*f2 
    def f4:Fraction = f1/f2
    
    f3.print()
    f4.print()
}
