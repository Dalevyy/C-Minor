
def const SIZE:Int = 10

def BinarySearch(in num:Int) => Bool {
    def lst:Array[Int] = Array[10](1,2,3,4,5,6,7,8,9,10)
    def l:Int = 1, r:Int = SIZE
    def mid:Int = uninit 

    while(l <= r) {
        set mid = (r+l)/2
        if(mid < 1 or mid > SIZE) { break }
        else if(num > lst[mid]) { set l = mid+1 }
        else if num < lst[mid] { set r = mid }
        else { return True }
    }

    return False
}

def main() => Void {
    def local numToFind:Int = uninit

    cout << 'Please enter a number:'
    cin >> numToFind

    if(BinarySearch(numToFind)) {
        cout << numToFind << ' was found in the array!'
    } else {
        cout << numToFind << ' was not found...' 
    }

    stop
}
